body {
  box-sizing: border-box;
}
/* La dirección por defecto de un flex, es horizontal */
.container {
  height: 30vh;
  background-color: #333;
  /* Con display flex nuestro contenedor  se comporta como bloque*/
  display: flex;
  /* Si tenemos la necesidad de alinear muchas cajas podemos hacer uso de display: inline-flex */
  /* display: inline-flex; */

  /* --------------------------
    flex-direction
    */
  /* flex-direction: row-reverse;
    flex-direction: row;
    flex-direction: column;
    flex-direction: column-reverse; */
    flex-direction: row;
    
  /* --------------------
    flex-wrap:especifica si los elementos "hijos" son obligados a permanecer en una misma línea o pueden fluir en varias líneas. 
    Propiedades

    nowrap:
    Los elementos flex son distribuidos en una sola línea, lo cual puede llevar a que se desborde el contenedor flex. 
    wrap:
    Los elementos flex son colocados en varias líneas.
    */
   

    flex-wrap: wrap  ;

    /* Si queremos agregar las dos propiedades en una sola linea de codigo podemos usar flex-flow
    */
    flex-flow:column wrap-reverse;

    /*---------------------------------- 
    Alineación del Main Axis
    justify-content: flex-start
    justify-content: flex-end
     justify-content: center
     justify-content: space-between
     justify-content: space-around
     justify-content: scpace-evenly
     Lo que define en que eje se van a colocar es nuestro flex-direction:
    */
    /* Define la alinación de los elementos hijos */
    justify-content: space-evenly;
  /* //------------------------------------- */
    /*
    Align-items: 
    Valor por defecto: stretch
    -flex-start
    -flex-end
    -center
    -baseline
    */
    flex-flow: row wrap;
    justify-content: flex-start;
    align-items: center;

    /* align-content ajusta las líneas dentro de un contenedor flex cuando hay espacio extra en el eje transversal. Esta propiedad no funciona cuando los hijos estan en una sola linea
    Cuando flex:wrap:nowrap NO FUNCIONA*/
    align-content: flex-end;


}
.item {
    border: medium solid #999;
  background-color: #666;
  width: 20%;
  height: 20%;
}
